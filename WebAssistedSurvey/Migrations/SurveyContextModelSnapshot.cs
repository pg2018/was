// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAssistedSurvey.Models;

namespace WebAssistedSurvey.Migrations
{
    [DbContext(typeof(SurveyContext))]
    partial class SurveyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("WebAssistedSurvey.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("EndDateTime");

                    b.Property<bool>("IsMultidays");

                    b.Property<DateTime>("StartDateTime");

                    b.Property<string>("Summery")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.HasKey("EventID");

                    b.ToTable("SurveyEvents");
                });

            modelBuilder.Entity("WebAssistedSurvey.Models.Survey", b =>
                {
                    b.Property<int>("SurveyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BadGuy");

                    b.Property<string>("ContactEmail");

                    b.Property<string>("ContactName");

                    b.Property<DateTime>("Created");

                    b.Property<int>("EventID");

                    b.Property<string>("Feedback");

                    b.Property<string>("GoodGuy");

                    b.Property<string>("Source");

                    b.Property<bool>("WantNewsletter");

                    b.HasKey("SurveyID");

                    b.HasIndex("EventID");

                    b.ToTable("Surveys");
                });

            modelBuilder.Entity("WebAssistedSurvey.Models.Survey", b =>
                {
                    b.HasOne("WebAssistedSurvey.Models.Event", "Event")
                        .WithMany("Surveys")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
